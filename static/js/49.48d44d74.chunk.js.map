{"version":3,"file":"static/js/49.48d44d74.chunk.js","mappings":"wNAQe,SAASA,IACtB,IAAQC,GAAaC,EAAAA,EAAAA,MAAbD,SACFE,GAAUC,EAAAA,EAAAA,MAChB,GAAuB,IAAnBD,EAAQE,OAAZ,CACA,MAAiBF,EAAQG,QAAO,SAAAC,GAAI,OAAIA,EAAKC,KAAOC,OAAOR,MAApDS,GAAP,eAEA,OACE,iCACE,wBAAKA,EAAOC,QAEZ,wBACGD,EAAOE,MAAMC,KAAI,YAAoB,IAAjBL,EAAgB,EAAhBA,GAAIM,EAAY,EAAZA,MACjBC,GAAWC,EAAAA,EAAAA,IAAaC,EAAAA,EAAAA,KAAgB,CAAEC,OAAQV,IACxD,OACE,yBACE,SAAC,KAAD,CAAMW,GAAIJ,EAAV,SAAqBD,KADdN","sources":["pages/AuthorSubPage.jsx"],"sourcesContent":["import {\n  useParams,\n  useOutletContext,\n  Link,\n  generatePath,\n} from 'react-router-dom';\nimport RoutPaths from '../RoutPaths';\n\nexport default function AuthorSubPage() {\n  const { authorId } = useParams();\n  const authors = useOutletContext();\n  if (authors.length === 0) return;\n  const [author] = authors.filter(autr => autr.id === Number(authorId));\n\n  return (\n    <>\n      <h2>{author.name}</h2>\n\n      <ul>\n        {author.books.map(({ id, title }) => {\n          const bookPath = generatePath(RoutPaths.book, { bookId: id });\n          return (\n            <li key={id}>\n              <Link to={bookPath}>{title}</Link>\n            </li>\n          );\n        })}\n      </ul>\n    </>\n  );\n}\n"],"names":["AuthorSubPage","authorId","useParams","authors","useOutletContext","length","filter","autr","id","Number","author","name","books","map","title","bookPath","generatePath","RoutPaths","bookId","to"],"sourceRoot":""}