{"version":3,"file":"static/js/829.4cf6b1b5.chunk.js","mappings":"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","sources":["components/Box/Box.jsx","components/Button/Button.styled.jsx","components/Button/Button.jsx","components/Title/Title.jsx","redux/todos/asyncTodosOperations.js","components/AsyncTodos/Statistic/Statistic.jsx","components/AsyncTodos/TodoEditor/TodoEditor.jsx","components/AsyncTodos/Todo/Todo.jsx","components/AsyncTodos/TodoList/TodoList.jsx","components/AsyncTodos/Filter/Filter.jsx","components/AsyncTodos/AsyncTodos.jsx","pages/asyncTodos/AsyncTodosPage.jsx"],"sourcesContent":["import styled from 'styled-components'\nimport { color, space, layout, flexbox, position } from 'styled-system'\n\nexport const Box = styled(\"div\")(\n    color,\n    space,\n    layout,\n    flexbox,\n    position,\n)\n\n","import styled from \"styled-components\";\n\nexport const StyledButton = styled.button.attrs(props => ({\n    type: props.type || 'button',\n}))`\n    display: ${p => p.display || 'block'};\n    align-items: ${p => p.alignItems || 'stretch'};\n    justify-content: ${p => p.justifyContent || 'stretch'};\n\n    width: ${p => p.width || '3rem'};\n    height: ${p => p.height || 'auto'};\n    padding: ${p => p.padding || p.theme.space[2]}px;\n    font-size: ${p => p.fontSize || p.theme.fontSizes.s}px;\n    border: ${p => p.border || 'none'};\n    outline: ${p => p.outline || 'none'};\n    border-radius: ${p => p.borderRadius || p.theme.radii.normal};\n    background-color: ${p => p.backgroundColor || 'transparent'};\n    color: ${p => p.color || p.theme.text};\n    \n`;","import { StyledButton } from \"./Button.styled\"\nexport const Button = (props)=>{\n    return(\n        <StyledButton {...props} />\n    );\n};","import styled from \"styled-components\";\n\nexport const Title = (props) => (\n    <StyledTitle {...props}/>\n)\n\nconst StyledTitle = styled('h2')`\n    font-size: ${p => p.fontSize || p.theme.fontSizes.l}px;\n    font-weight: ${p => p.fontWeight || p.theme.normal};\n    color: ${p => p.color || p.theme.colors.text};\n    text-align: ${p => p.textAlign || 'start'};\n    margin: ${p => p.margin || '0 0 0 0'};\n`;","import axios from 'axios';\nimport {\n  addTodoRequest,\n  addTodoSuccess,\n  addTodoError,\n  deleteTodoRequest,\n  deleteTodoSuccess,\n  deleteTodoError,\n  updateTodoRequest,\n  updateTodoSuccess,\n  updateTodoError,\n  fetchTodoRequest,\n  fetchTodoSuccess,\n  fetchTodoError,\n} from './asyncTodosActions';\naxios.defaults.baseURL = 'http://localhost:4040';\n\nexport const fetchTodos = () => async dispatch => {\n  dispatch(fetchTodoRequest());\n  try {\n    const { data } = await axios.get('/todos');\n    dispatch(fetchTodoSuccess(data));\n  } catch (error) {\n    dispatch(fetchTodoError(error.message));\n  }\n};\n\nexport const addTodo = args => dispatch => {\n  const todo = {\n    text: args,\n    completed: false,\n  };\n  dispatch(addTodoRequest());\n  axios\n    .post('/todos', todo)\n    .then(({ data }) => dispatch(addTodoSuccess(data)))\n    .catch(error => dispatch(addTodoError(error.message)));\n};\n\nexport const deleteTodo = todoId => dispatch => {\n  dispatch(deleteTodoRequest());\n  axios\n    .delete(`/todos/${todoId}`)\n    .then(() => dispatch(deleteTodoSuccess(todoId)))\n    .catch(error => dispatch(deleteTodoError(error.message)));\n};\n\nexport const updateTodo =\n  ({ id, completed }) =>\n  dispatch => {\n    dispatch(updateTodoRequest());\n    const update = { completed };\n    axios\n      .patch(`/todos/${id}`, update)\n      .then(({ data }) => dispatch(updateTodoSuccess(data)))\n      .catch(error => dispatch(updateTodoError(error.message)));\n  };\n","import styled from \"styled-components\";\nimport { Box } from \"../../Box\";\n\nexport const Statistic = ({total, completed})=>{\n    return(\n        <Box mb={15}>\n            <StyledText>Total Todos: {total}</StyledText>\n            <StyledText>Comleted Todos: {completed}</StyledText>\n        </Box>\n    )\n}\n\nconst StyledText = styled('p')`\n    margin: 0 0 5px 0;\n    font-size: 18px;\n    font-weight: 700;\n    color: ${p => p.theme.colors.text}\n`;\n","import { useState } from 'react';\nimport styled from 'styled-components';\nimport { Button } from '../../Button/Button';\n\nexport const TodoEditor = ({ onAddTodo }) => {\n  const [message, setMessage] = useState('');\n\n  const handleChange = e => {\n    setMessage(e.target.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onAddTodo(message);\n    setMessage('');\n  };\n\n  return (\n    <StyledForm onSubmit={handleSubmit}>\n      <StyledText value={message} name=\"text\" onChange={handleChange} />\n\n      <Button\n        type=\"submit\"\n        width=\"100%\"\n        backgroundColor={props => props.theme.colors.secondary}\n        color=\"white\"\n      >\n        create\n      </Button>\n    </StyledForm>\n  );\n};\n\nconst StyledForm = styled('form')`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst StyledText = styled('textarea')`\n  width: 350px;\n  height: 75px;\n\n  padding: ${p => p.theme.space[3]}px;\n  resize: none;\n`;\n","import { useDispatch } from 'react-redux';\nimport { Button } from '../../Button/Button';\nimport { RiDeleteBin6Line } from 'react-icons/ri';\nimport styled, { css } from 'styled-components';\nimport { updateTodo } from '../../../redux/todos/asyncTodosOperations';\n\nexport const Todo = ({ id, text, completed, onDelete }) => {\n  const dispatch = useDispatch();\n  const onChangeHandler = () => {\n    dispatch(updateTodo({ id, completed: !completed }));\n  };\n  return (\n    <>\n      <input type=\"checkbox\" checked={completed} onChange={onChangeHandler} />\n      <StyledText checked={completed}>{text}</StyledText>\n      <Button\n        onClick={() => {\n          onDelete(id);\n        }}\n      >\n        <RiDeleteBin6Line size={20} color=\"inherit\" />\n      </Button>\n    </>\n  );\n};\n\nconst StyledText = styled('p')`\n  ${p => {\n    if (p.checked) {\n      return css`\n        color: ${p.theme.colors.secondary};\n        text-decoration: line-through;\n      `;\n    }\n\n    return css`\n      color: ${p.theme.colors.text};\n      text-decoration: none;\n    `;\n  }};\n`;\n","import styled from 'styled-components';\nimport { Todo } from '../Todo/Todo';\n\nexport const TodoList = ({ todos, onDeleteTodo }) => {\n  return (\n    <StyledList>\n      {todos.map(({ id, text, completed }) => (\n        <StyledItem key={id} cheked={completed}>\n          <Todo\n            id={id}\n            text={text}\n            completed={completed}\n            onDelete={onDeleteTodo}\n          />\n        </StyledItem>\n      ))}\n    </StyledList>\n  );\n};\n\nconst StyledList = styled('ul')`\n  display: flex;\n  flex-wrap: wrap;\n  padding: 10px;\n  margin-right: -10px;\n`;\n\nconst StyledItem = styled('li')`\n  position: relative;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n\n  width: calc(100% / 3 - 10px);\n  height: 50px;\n  padding: 5px 10px;\n  margin: 0 10px 10px 0;\n\n  background-color: grey;\n\n  &::before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 4px;\n\n    background-color: ${p => p.theme.colors.effects};\n\n    transform: ${p => (p.cheked ? 'scaleX(1)' : 'scaleX(0) ')};\n    transition: transform 250ms linear;\n  }\n`;\n","import styled from \"styled-components\";\nimport shortid from \"shortid\";\n\nexport const Filter = ({value, onChange})=>{\n    const inputId = shortid.generate()\n    return(\n        <>\n        <StyledLabel htmlFor={inputId}>\n            Filter by Text: \n            </StyledLabel>\n        <StyledInput\n            id={inputId}\n            type='text'\n            name='filter'\n            value={value}\n            onChange={onChange}\n        />\n        </>\n    );\n}\n\n\n\nconst StyledInput = styled('input')`\n    width: 200px;\n    height: 30px;\n    border: ${p => p.theme.borders.bold};\n    border-color: ${p => p.theme.colors.secondary};\n    outline: none;\n`;\n\nconst StyledLabel = styled('label')`\n    font-size: ${p => p.theme.fontSizes.m}px;\n    color: ${p => p.theme.colors.text};\n    margin-right: ${p => p.theme.space[3]}px;\n`;","import { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { changeFilter } from '../../redux/todos/asyncTodosActions';\nimport {\n  addTodo,\n  deleteTodo,\n  fetchTodos,\n} from '../../redux/todos/asyncTodosOperations';\nimport { Statistic } from './Statistic/Statistic';\nimport { TodoEditor } from './TodoEditor/TodoEditor';\nimport { TodoList } from './TodoList/TodoList';\nimport { Filter } from './Filter/Filter';\nimport { Box } from '../Box';\nimport { Title } from '../Title/Title';\n\nconst Todos = () => {\n  const { todos, filter } = useSelector(state => state.asyncTodos);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchTodos());\n  }, [dispatch]);\n\n  const handleChange = e => {\n    const { value } = e.target;\n    dispatch(changeFilter(value));\n  };\n\n  const addTodoHandler = text => {\n    dispatch(addTodo(text));\n  };\n\n  const deleteTodoHandler = todoId => {\n    dispatch(deleteTodo(todoId));\n  };\n\n  const filterTodos = () => {\n    const normalizeFilter = filter.toLowerCase();\n    return todos.filter(todo =>\n      todo.text.toLowerCase().includes(normalizeFilter)\n    );\n  };\n\n  const completedTodos = todos.reduce((counter, todo) => {\n    return todo.completed ? counter + 1 : counter;\n  }, 0);\n  const filteredTodos = filterTodos();\n\n  return (\n    <Box>\n      <Title textAlign=\"center\" margin=\"10px 0 20px 0\">\n        Your Todo List\n      </Title>\n      <Box display=\"flex\" justifyContent=\"space-around\">\n        <TodoEditor onAddTodo={addTodoHandler} />\n        <Box mb={20}>\n          <Statistic total={todos.length} completed={completedTodos} />\n          <Filter onChange={handleChange} />\n        </Box>\n      </Box>\n\n      <TodoList todos={filteredTodos} onDeleteTodo={deleteTodoHandler} />\n    </Box>\n  );\n};\n\nexport default Todos;\n","import * as React from 'react';\nimport AsyncTodos from '../../components/AsyncTodos';\n\nconst AsyncTodosPage = () => {\n  return (\n    <>\n      <AsyncTodos />\n    </>\n  );\n};\n\nexport default AsyncTodosPage;\n"],"names":["Box","styled","color","space","layout","flexbox","position","StyledButton","props","type","p","display","alignItems","justifyContent","width","height","padding","theme","fontSize","fontSizes","s","border","outline","borderRadius","radii","normal","backgroundColor","text","Button","Title","StyledTitle","l","fontWeight","colors","textAlign","margin","axios","Statistic","total","completed","mb","StyledText","TodoEditor","onAddTodo","useState","message","setMessage","StyledForm","onSubmit","e","preventDefault","value","name","onChange","target","secondary","Todo","id","onDelete","dispatch","useDispatch","checked","updateTodoRequest","update","then","data","updateTodoSuccess","catch","error","updateTodoError","updateTodo","onClick","size","css","TodoList","todos","onDeleteTodo","StyledList","map","StyledItem","cheked","effects","Filter","inputId","shortid","StyledLabel","htmlFor","StyledInput","borders","bold","m","useSelector","state","asyncTodos","filter","useEffect","fetchTodoRequest","fetchTodoSuccess","fetchTodoError","completedTodos","reduce","counter","todo","filteredTodos","normalizeFilter","toLowerCase","includes","filterTodos","args","addTodoRequest","addTodoSuccess","addTodoError","length","changeFilter","todoId","deleteTodoRequest","deleteTodoSuccess","deleteTodoError","deleteTodo","AsyncTodos"],"sourceRoot":""}